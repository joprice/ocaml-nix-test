### This file is generated by opam2nix.

self:
let
    lib = self.lib;
    pkgs = self.pkgs;
    repoPath = self.repoPath;
    repos = 
    {
      opam-repository = 
      rec {
        fetch = 
        {
          owner = "ocaml";
          repo = "opam-repository";
          rev = "12141eb02b97b460cb58080ec6f6eb3041f18aa2";
          sha256 = "0cddkzlqqrq92chb5s7g8b4yk4wfw6qcj2dx5zxindck9br7sbsc";
        };
        src = (pkgs.fetchFromGitHub) fetch;
      };
    };
    selection = self.selection;
in
{
  format-version = 4;
  ocaml-version = "4.12.0";
  repos = repos;
  selection = 
  {
    angstrom = 
    {
      opamInputs = 
      {
        bigstringaf = selection.bigstringaf;
        dune = selection.dune;
        ocaml = selection.ocaml;
        ocaml-syntax-shims = selection.ocaml-syntax-shims;
        result = selection.result;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:07ryik3g3hz79hnfdwxdh2jsw3cmbgygjs7mjdw07p927wkd83k9";
        package = "packages/angstrom/angstrom.0.15.0";
      };
      pname = "angstrom";
      src = pkgs.fetchurl 
      {
        sha256 = "01cjjal8vjsm225v9y0q6ixam8k5f821rcr6yix6i9nzs84aq6gi";
        url = "https://github.com/inhabitedtype/angstrom/archive/0.15.0.tar.gz";
      };
      version = "0.15.0";
    };
    astring = 
    {
      opamInputs = 
      {
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
        topkg = selection.topkg;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1djnad9sq12idlakj069xvwm2nn7wqm137pqbxxai5frkgi08x74";
        package = "packages/astring/astring.0.8.5";
      };
      pname = "astring";
      src = pkgs.fetchurl 
      {
        sha256 = "1ykhg9gd3iy7zsgyiy2p9b1wkpqg9irw5pvcqs3sphq71iir4ml6";
        url = "https://erratique.ch/software/astring/releases/astring-0.8.5.tbz";
      };
      version = "0.8.5";
    };
    base = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        dune-configurator = selection.dune-configurator;
        ocaml = selection.ocaml;
        sexplib0 = selection.sexplib0;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:014xlh33ayf440lf9yx62z43q9977254911p3jyncw2hrmarny4h";
        package = "packages/base/base.v0.14.1";
      };
      pname = "base";
      src = pkgs.fetchurl 
      {
        sha256 = "13b0xc62ka8i2ry2r62gc194wzfdq1vqf2qygwrrk26pvqn8a9l9";
        url = "https://github.com/janestreet/base/archive/v0.14.1.tar.gz";
      };
      version = "v0.14.1";
    };
    base-bytes = 
    {
      opamInputs = 
      {
        ocaml = selection.ocaml;
        ocamlfind = selection.ocamlfind;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0a68lmbf68jgm1i3b59j2sc3ha9yhv4678f9mfwwvczw88prq7l3";
        package = "packages/base-bytes/base-bytes.base";
      };
      pname = "base-bytes";
      src = null;
      version = "base";
    };
    base-threads = 
    {
      opamInputs = {
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1c4bpyh61ampjgk5yh3inrgcpf1z1xv0pshn54ycmpn4dyzv0p2x";
        package = "packages/base-threads/base-threads.base";
      };
      pname = "base-threads";
      src = null;
      version = "base";
    };
    base-unix = 
    {
      opamInputs = {
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0mpsvb7684g723ylngryh15aqxg3blb7hgmq2fsqjyppr36iyzwg";
        package = "packages/base-unix/base-unix.base";
      };
      pname = "base-unix";
      src = null;
      version = "base";
    };
    base64 = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1xlrmf6920bgsrzycmfp3c6nfylxvfq358cjnjglllh8aiwzsl83";
        package = "packages/base64/base64.3.5.0";
      };
      pname = "base64";
      src = pkgs.fetchurl 
      {
        sha256 = "19735bvb3k263hzcvdhn4d5lfv2qscc9ib4q85wgxsvq0p0fk7aq";
        url = "https://github.com/mirage/ocaml-base64/releases/download/v3.5.0/base64-v3.5.0.tbz";
      };
      version = "3.5.0";
    };
    bigarray-compat = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0mcg8csmd60ph17vam1s8xjsl9kp6k77i3mnkbxy0jvkn49m4a0k";
        package = "packages/bigarray-compat/bigarray-compat.1.0.0";
      };
      pname = "bigarray-compat";
      src = pkgs.fetchurl 
      {
        sha256 = "1bpmmnxb1yx72aqlbdaqfl18rgz1cq9cf6cqvnfl88mz5dfr4x0d";
        url = "https://github.com/mirage/bigarray-compat/archive/v1.0.0.tar.gz";
      };
      version = "1.0.0";
    };
    bigarray-overlap = 
    {
      opamInputs = 
      {
        bigarray-compat = selection.bigarray-compat;
        dune = selection.dune;
        js_of_ocaml-compiler = selection.js_of_ocaml-compiler or null;
        mirage-xen-posix = selection.mirage-xen-posix or null;
        ocaml = selection.ocaml;
        ocaml-freestanding = selection.ocaml-freestanding or null;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:06ipffy0dhx8vh8788mhzgmlj7y2f9nxsgkbbklkn5sf5kj7njdh";
        package = "packages/bigarray-overlap/bigarray-overlap.0.2.0";
      };
      pname = "bigarray-overlap";
      src = pkgs.fetchurl 
      {
        sha256 = "1v86avafsbyxjccy0y9gny31s2jzb0kd42v3mhcalklx5f044lcy";
        url = "https://github.com/dinosaure/overlap/releases/download/v0.2.0/bigarray-overlap-v0.2.0.tbz";
      };
      version = "0.2.0";
    };
    bigstringaf = 
    {
      opamInputs = 
      {
        bigarray-compat = selection.bigarray-compat;
        conf-pkg-config = selection.conf-pkg-config;
        dune = selection.dune;
        ocaml = selection.ocaml;
        ocaml-freestanding = selection.ocaml-freestanding or null;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0q3v7v83pj1rf7qzqj5silkx0s8sjpkwjzkvnmnqkyp4aljqnlnb";
        package = "packages/bigstringaf/bigstringaf.0.8.0";
      };
      pname = "bigstringaf";
      src = pkgs.fetchurl 
      {
        sha256 = "06w66xnqgv8r92x50b3q6xrymry6fviyj572dw7y76cqdzfph18z";
        url = "https://github.com/inhabitedtype/bigstringaf/archive/0.8.0.tar.gz";
      };
      version = "0.8.0";
    };
    biniou = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        easy-format = selection.easy-format;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1m9s9v4zr7022k6d50482qq7w41fdqp58nkpfhcp8574hg65kh69";
        package = "packages/biniou/biniou.1.2.1";
      };
      pname = "biniou";
      src = pkgs.fetchurl 
      {
        sha256 = "0da3m0g0dhl02jfynrbysjh070xk2z6rxcx34xnqx6ljn5l6qm1m";
        url = "https://github.com/mjambon/biniou/releases/download/1.2.1/biniou-1.2.1.tbz";
      };
      version = "1.2.1";
    };
    camomile = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0y234rr9asb5dyvva77jdnhncixvvqdmbil4q6lhdr3bbr9c6cyk";
        package = "packages/camomile/camomile.1.0.2";
      };
      pname = "camomile";
      src = pkgs.fetchurl 
      {
        sha256 = "0chn7ldqb3wyf95yhmsxxq65cif56smgz1mhhc7m0dpwmyq1k97h";
        url = "https://github.com/yoriyuki/Camomile/releases/download/1.0.2/camomile-1.0.2.tbz";
      };
      version = "1.0.2";
    };
    caqti = 
    {
      opamInputs = 
      {
        cppo = selection.cppo;
        dune = selection.dune;
        logs = selection.logs;
        ocaml = selection.ocaml;
        ptime = selection.ptime;
        uri = selection.uri;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1n9jcd605lg68r1av57qkdcih3mmkkv1jsy112z0gg8qgv0657lv";
        package = "packages/caqti/caqti.1.6.0";
      };
      pname = "caqti";
      src = pkgs.fetchurl 
      {
        sha256 = "0kb7phb3hbyz541nhaw3lb4ndar5gclzb30lsq83q0s70pbc1w0v";
        url = "https://github.com/paurkedal/ocaml-caqti/releases/download/v1.6.0/caqti-v1.6.0.tbz";
      };
      version = "1.6.0";
    };
    caqti-lwt = 
    {
      opamInputs = 
      {
        caqti = selection.caqti;
        dune = selection.dune;
        logs = selection.logs;
        lwt = selection.lwt;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:17vb86x06gnmjxpx25i1rlph0jw331q9p42x2q8gj1lhbnlrp049";
        package = "packages/caqti-lwt/caqti-lwt.1.6.0";
      };
      pname = "caqti-lwt";
      src = pkgs.fetchurl 
      {
        sha256 = "0kb7phb3hbyz541nhaw3lb4ndar5gclzb30lsq83q0s70pbc1w0v";
        url = "https://github.com/paurkedal/ocaml-caqti/releases/download/v1.6.0/caqti-v1.6.0.tbz";
      };
      version = "1.6.0";
    };
    charInfo_width = 
    {
      opamInputs = 
      {
        camomile = selection.camomile;
        dune = selection.dune;
        ocaml = selection.ocaml;
        result = selection.result;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1llh67ns94c9jn1mki2crs0r4ny0v249q7anj0phb8dijda6jd89";
        package = "packages/charInfo_width/charInfo_width.1.1.0";
      };
      pname = "charInfo_width";
      src = pkgs.fetchurl 
      {
        sha256 = "0wl1hcwbx2mmgbhwh1wwgjixvppjq0k43nqyq13xm4pvgdxfvci1";
        url = "https://github.com/kandu/charInfo_width/archive/1.1.0.tar.gz";
      };
      version = "1.1.0";
    };
    checkseum = 
    {
      opamInputs = 
      {
        base-bytes = selection.base-bytes;
        bigarray-compat = selection.bigarray-compat;
        conf-pkg-config = selection.conf-pkg-config;
        dune = selection.dune;
        dune-configurator = selection.dune-configurator;
        ocaml = selection.ocaml;
        ocaml-freestanding = selection.ocaml-freestanding or null;
        optint = selection.optint;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1zjflxf5782rw0inf0mf7hp9h8sk7ymb0bpqyblisvp4kcjwwzaj";
        package = "packages/checkseum/checkseum.0.3.2";
      };
      pname = "checkseum";
      src = pkgs.fetchurl 
      {
        sha256 = "1mfc8mnrdxh3km9q099z7kg93l0a9ngf713jbl4j9i6gl4p2ipcw";
        url = "https://github.com/mirage/checkseum/releases/download/v0.3.2/checkseum-v0.3.2.tbz";
      };
      version = "0.3.2";
    };
    cmdliner = 
    {
      opamInputs = {
                     ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:05qlm4yp6124w2z10dpdchldfrmgmcr6h31rnxp8qs8mk0xzx48z";
        package = "packages/cmdliner/cmdliner.1.0.4";
      };
      pname = "cmdliner";
      src = pkgs.fetchurl 
      {
        sha256 = "1h04q0zkasd0mw64ggh4y58lgzkhg6yhzy60lab8k8zq9ba96ajw";
        url = "http://erratique.ch/software/cmdliner/releases/cmdliner-1.0.4.tbz";
      };
      version = "1.0.4";
    };
    conf-libev = 
    {
      buildInputs = [ (pkgs.libev or null) (pkgs.libev-dev or null)
                       (pkgs.libev-devel or null) ];
      opamInputs = {
                     ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0dyhk3dsvv48kfkhgh4lh0i1vgghb87wxkibn1aiiyws0vgjhilf";
        package = "packages/conf-libev/conf-libev.4-12";
      };
      pname = "conf-libev";
      src = null;
      version = "4-12";
    };
    conf-libssl = 
    {
      buildInputs = [ (pkgs.openssl) ];
      opamInputs = 
      {
        conf-pkg-config = selection.conf-pkg-config;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:02hgl7v0yz2rdjgl90yxw9nhyb80jvjwqbikp45qk71s27kjlhay";
        package = "packages/conf-libssl/conf-libssl.3";
      };
      pname = "conf-libssl";
      src = null;
      version = "3";
    };
    conf-pkg-config = 
    {
      buildInputs = [ (pkgs.pkgconfig) ];
      opamInputs = {
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1rli6809glz5g9xwp4wsjidc39za4n58xcpkamy6fymfnqha225n";
        package = "packages/conf-pkg-config/conf-pkg-config.2";
      };
      pname = "conf-pkg-config";
      src = null;
      version = "2";
    };
    cppo = 
    {
      opamInputs = 
      {
        base-unix = selection.base-unix;
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1nzizaa7q2rnlg7l1rcf4q503lssvmal3vjj8gchcw23sv80j9bp";
        package = "packages/cppo/cppo.1.6.7";
      };
      pname = "cppo";
      src = pkgs.fetchurl 
      {
        sha256 = "17ajdzrnmnyfig3s6hinb56mcmhywbssxhsq32dz0v90dhz3wmfv";
        url = "https://github.com/ocaml-community/cppo/releases/download/v1.6.7/cppo-v1.6.7.tbz";
      };
      version = "1.6.7";
    };
    csexp = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:01lc95kz13gpki4xazyh6n20kv1g9inyb5myv240wl2n9v50z8fl";
        package = "packages/csexp/csexp.1.5.1";
      };
      pname = "csexp";
      src = pkgs.fetchurl 
      {
        sha256 = "00mc19f89pxpmjl62862ya5kjcfrl8rjzvs00j05h2m9bw3f81fn";
        url = "https://github.com/ocaml-dune/csexp/releases/download/1.5.1/csexp-1.5.1.tbz";
      };
      version = "1.5.1";
    };
    cstruct = 
    {
      opamInputs = 
      {
        bigarray-compat = selection.bigarray-compat;
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1fypp9rzvb53h9g8n7ci1k6irpnc5zgww800p86qr81mdz9a5xa4";
        package = "packages/cstruct/cstruct.6.0.1";
      };
      pname = "cstruct";
      src = pkgs.fetchurl 
      {
        sha256 = "1vcvgba0bb1a0vk1q2cllqxjacanhr3hxgzab4y4alr70j7vnrsa";
        url = "https://github.com/mirage/ocaml-cstruct/releases/download/v6.0.1/cstruct-v6.0.1.tbz";
      };
      version = "6.0.1";
    };
    ctypes = 
    {
      opamInputs = 
      {
        bigarray-compat = selection.bigarray-compat;
        ctypes-foreign = selection.ctypes-foreign or null;
        integers = selection.integers;
        mirage-xen = selection.mirage-xen or null;
        ocaml = selection.ocaml;
        ocamlfind = selection.ocamlfind;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0cwxwp4bj0yyyg8pwd8v8v6x0gvjniwih922q6cglpc04n9w98py";
        package = "packages/ctypes/ctypes.0.19.1";
      };
      pname = "ctypes";
      src = pkgs.fetchurl 
      {
        sha256 = "05q6xrl09g515njfx3cdb497460jy6x60fjbz8iz9ajg7x1y591f";
        url = "https://github.com/ocamllabs/ocaml-ctypes/archive/0.19.1.tar.gz";
      };
      version = "0.19.1";
    };
    decompress = 
    {
      opamInputs = 
      {
        base-bytes = selection.base-bytes;
        bigarray-compat = selection.bigarray-compat;
        checkseum = selection.checkseum;
        cmdliner = selection.cmdliner;
        dune = selection.dune;
        ocaml = selection.ocaml;
        optint = selection.optint;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0hb4af2xr4v340xnppf97y193npisjgbhm32ppnh1yfsk9cpbbwq";
        package = "packages/decompress/decompress.1.4.2";
      };
      pname = "decompress";
      src = pkgs.fetchurl 
      {
        sha256 = "09ajp5lk4k8s6m03rsbqx7mk6psddp4bhk9k5j84lzy88rdi4bw2";
        url = "https://github.com/mirage/decompress/releases/download/v1.4.2/decompress-v1.4.2.tbz";
      };
      version = "1.4.2";
    };
    digestif = 
    {
      opamInputs = 
      {
        base-bytes = selection.base-bytes;
        bigarray-compat = selection.bigarray-compat;
        conf-pkg-config = selection.conf-pkg-config;
        dune = selection.dune;
        eqaf = selection.eqaf;
        ocaml = selection.ocaml;
        ocaml-freestanding = selection.ocaml-freestanding or null;
        stdlib-shims = selection.stdlib-shims;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0cmdjw96znasi36dd4da0z65xlk23wd95lih2g0hmgdngb33bndr";
        package = "packages/digestif/digestif.1.0.1";
      };
      pname = "digestif";
      src = pkgs.fetchurl 
      {
        sha256 = "1f520cw6nfn324v0qwxzxhgxfnsnkyh43wjp1kc2yng3diq6wzfd";
        url = "https://github.com/mirage/digestif/releases/download/v1.0.1/digestif-v1.0.1.tbz";
      };
      version = "1.0.1";
    };
    dream = 
    {
      opamInputs = 
      {
        angstrom = selection.angstrom;
        base-unix = selection.base-unix;
        base64 = selection.base64;
        bigarray-compat = selection.bigarray-compat;
        bigstringaf = selection.bigstringaf;
        caqti = selection.caqti;
        caqti-lwt = selection.caqti-lwt;
        conf-libev = selection.conf-libev;
        cstruct = selection.cstruct;
        digestif = selection.digestif;
        dune = selection.dune;
        faraday = selection.faraday;
        faraday-lwt-unix = selection.faraday-lwt-unix;
        fmt = selection.fmt;
        graphql-lwt = selection.graphql-lwt;
        graphql_parser = selection.graphql_parser;
        hmap = selection.hmap;
        logs = selection.logs;
        lwt = selection.lwt;
        lwt_ppx = selection.lwt_ppx;
        lwt_ssl = selection.lwt_ssl;
        magic-mime = selection.magic-mime;
        mirage-crypto = selection.mirage-crypto;
        mirage-crypto-rng = selection.mirage-crypto-rng;
        multipart_form = selection.multipart_form;
        ocaml = selection.ocaml;
        psq = selection.psq;
        result = selection.result;
        ssl = selection.ssl;
        uri = selection.uri;
        yojson = selection.yojson;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:05x4spv5dgiiqs6n62a5lscjp1iynjr5csazhi3zfpxdqdl5pgdg";
        package = "packages/dream/dream.1.0.0~alpha2";
      };
      pname = "dream";
      src = pkgs.fetchurl 
      {
        sha256 = "00dvp593jlandpsyxq5ndyh492ywl7ya3yld1g1irq571lzw26dz";
        url = "https://github.com/aantron/dream/releases/download/1.0.0-alpha2/dream-1.0.0-alpha2.tar.gz";
      };
      version = "1.0.0-alpha2";
    };
    dream-cli = 
    {
      opamInputs = 
      {
        cmdliner = selection.cmdliner;
        dream = selection.dream;
        dune = selection.dune;
        fmt = selection.fmt;
        logs = selection.logs;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1mggc2mp6ripnc85rf6101gfbg79j0bldpyc3jfcsl7dsw91i3fh";
        package = "packages/dream-cli/dream-cli.0.1.0";
      };
      pname = "dream-cli";
      src = pkgs.fetchurl 
      {
        sha256 = "1as0b09vhlrchl13nw1k52qvd0khd1l14xgd2q9z7d3zgi17i2cg";
        url = "https://github.com/tmattio/dream-cli/releases/download/0.1.0/dream-cli-0.1.0.tbz";
      };
      version = "0.1.0";
    };
    dream-encoding = 
    {
      opamInputs = 
      {
        decompress = selection.decompress;
        dream = selection.dream;
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0q16dir4xddcd4ni5lsszn36kjgj2shf9da1v8prw6k16bjb201q";
        package = "packages/dream-encoding/dream-encoding.0.1.0";
      };
      pname = "dream-encoding";
      src = pkgs.fetchurl 
      {
        sha256 = "17dgmpkf0k02p5dc3s1gb4q1zidg7lrqjrp521v7qagkcxaw82yb";
        url = "https://github.com/tmattio/dream-encoding/releases/download/0.1.0/dream-encoding-0.1.0.tbz";
      };
      version = "0.1.0";
    };
    dream-livereload = 
    {
      opamInputs = 
      {
        dream = selection.dream;
        dune = selection.dune;
        lambdasoup = selection.lambdasoup;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:104hglvvabkz4m8zglndlph9irhxw9nbqjq1jnfdi0qzjp6cv3nr";
        package = "packages/dream-livereload/dream-livereload.0.1.0";
      };
      pname = "dream-livereload";
      src = pkgs.fetchurl 
      {
        sha256 = "1fw3vg9rh7b7nyycsjvriplkzndzh9z1lp90vsfqkh0p86drykiw";
        url = "https://github.com/tmattio/dream-livereload/releases/download/0.1.0/dream-livereload-0.1.0.tbz";
      };
      version = "0.1.0";
    };
    dream-serve = 
    {
      opamInputs = 
      {
        dream = selection.dream;
        dune = selection.dune;
        lambdasoup = selection.lambdasoup;
        luv = selection.luv;
        lwt = selection.lwt;
        lwt_ppx = selection.lwt_ppx;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0mcyrhkzgjapy4zq09szwcw3x7aplw709ys438xlndr2xp9sfl0x";
        package = "packages/dream-serve/dream-serve.1.0.0";
      };
      pname = "dream-serve";
      src = pkgs.fetchurl 
      {
        sha256 = "0sqmy3jjy00laxh1skq69i7mn2lg14sa2ilap8yvjpz2bhgc7cvp";
        url = "https://github.com/aantron/dream-serve/archive/refs/tags/1.0.0.tar.gz";
      };
      version = "1.0.0";
    };
    dune = 
    {
      opamInputs = 
      {
        base-threads = selection.base-threads;
        base-unix = selection.base-unix;
        ocaml = selection.ocaml or null;
        ocamlfind-secondary = selection.ocamlfind-secondary or null;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0014dz25yn6m4b5f0m22jncy26ayq9v8zc7pq9rsg28ja1l4shrk";
        package = "packages/dune/dune.2.9.0";
      };
      pname = "dune";
      src = pkgs.fetchurl 
      {
        sha256 = "07m476kgagpd6kzm3jq30yfxqspr2hychah0xfqs14z82zxpq8dv";
        url = "https://github.com/ocaml/dune/releases/download/2.9.0/dune-2.9.0.tbz";
      };
      version = "2.9.0";
    };
    dune-build-info = 
    {
      opamInputs = {
                     dune = selection.dune;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1s6fbayhbp8nzwmmfpfj3c89h318ddqd0gb1xv863b437qy6rn61";
        package = "packages/dune-build-info/dune-build-info.2.9.0";
      };
      pname = "dune-build-info";
      src = pkgs.fetchurl 
      {
        sha256 = "07m476kgagpd6kzm3jq30yfxqspr2hychah0xfqs14z82zxpq8dv";
        url = "https://github.com/ocaml/dune/releases/download/2.9.0/dune-2.9.0.tbz";
      };
      version = "2.9.0";
    };
    dune-configurator = 
    {
      opamInputs = 
      {
        csexp = selection.csexp;
        dune = selection.dune;
        ocaml = selection.ocaml;
        result = selection.result;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:16pfh5a0myc8j3c3hrmxhjr315xsjcwr4l59sdcxjba004g3v2g9";
        package = "packages/dune-configurator/dune-configurator.2.9.0";
      };
      pname = "dune-configurator";
      src = pkgs.fetchurl 
      {
        sha256 = "07m476kgagpd6kzm3jq30yfxqspr2hychah0xfqs14z82zxpq8dv";
        url = "https://github.com/ocaml/dune/releases/download/2.9.0/dune-2.9.0.tbz";
      };
      version = "2.9.0";
    };
    duration = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0pk9f1mgbrfn0a026k1219hazsbm9zkzlkmdhn3cm5fn071wwq92";
        package = "packages/duration/duration.0.2.0";
      };
      pname = "duration";
      src = pkgs.fetchurl 
      {
        sha256 = "0sffq704n619ncx3xci31z7mbrayj9w12wpigvzkzxx6lmszn55d";
        url = "https://github.com/hannesm/duration/releases/download/0.2.0/duration-0.2.0.tbz";
      };
      version = "0.2.0";
    };
    easy-format = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0rjgw1ygf8khwb7vgl5vnw907m8b5mpkb0bnlqiqz9zfmfb4jd47";
        package = "packages/easy-format/easy-format.1.3.2";
      };
      pname = "easy-format";
      src = pkgs.fetchurl 
      {
        sha256 = "09hrikx310pac2sb6jzaa7k6fmiznnmhdsqij1gawdymhawc4h1l";
        url = "https://github.com/mjambon/easy-format/releases/download/1.3.2/easy-format-1.3.2.tbz";
      };
      version = "1.3.2";
    };
    eqaf = 
    {
      opamInputs = 
      {
        cstruct = selection.cstruct;
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1riqd7dqgq5cf0y7m0fbpszcpazv1kcj1qii3kd0i9wiha46hd9l";
        package = "packages/eqaf/eqaf.0.8";
      };
      pname = "eqaf";
      src = pkgs.fetchurl 
      {
        sha256 = "0xgq3i3vkv9rzbbrg9f1gs9x6cyjdggqdr027sadfdvl21ha2i8i";
        url = "https://github.com/mirage/eqaf/releases/download/v0.8/eqaf-v0.8.tbz";
      };
      version = "0.8";
    };
    faraday = 
    {
      opamInputs = 
      {
        bigstringaf = selection.bigstringaf;
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1gk9zcifglbfnkjhndd96xf6bfp5ldmrpvvy3daidfd07l56vr96";
        package = "packages/faraday/faraday.0.8.1";
      };
      pname = "faraday";
      src = pkgs.fetchurl 
      {
        sha256 = "0yngavdplaaw5lb4ci4v4y5nvlhgan0mg1dlx1b5qdjgr83dk7cf";
        url = "https://github.com/inhabitedtype/faraday/archive/0.8.1.tar.gz";
      };
      version = "0.8.1";
    };
    faraday-lwt = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        faraday = selection.faraday;
        lwt = selection.lwt;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:14nrlva43l45wp71rbyk2fb9nk43krqp292wzrlmc8ip19pc8y9p";
        package = "packages/faraday-lwt/faraday-lwt.0.8.1";
      };
      pname = "faraday-lwt";
      src = pkgs.fetchurl 
      {
        sha256 = "0yngavdplaaw5lb4ci4v4y5nvlhgan0mg1dlx1b5qdjgr83dk7cf";
        url = "https://github.com/inhabitedtype/faraday/archive/0.8.1.tar.gz";
      };
      version = "0.8.1";
    };
    faraday-lwt-unix = 
    {
      opamInputs = 
      {
        base-unix = selection.base-unix;
        dune = selection.dune;
        faraday-lwt = selection.faraday-lwt;
        lwt = selection.lwt;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1zfzrrbfdvw4mbmp5alkv8bmhcsfr5nillb2nj6p49fab347182m";
        package = "packages/faraday-lwt-unix/faraday-lwt-unix.0.8.1";
      };
      pname = "faraday-lwt-unix";
      src = pkgs.fetchurl 
      {
        sha256 = "0yngavdplaaw5lb4ci4v4y5nvlhgan0mg1dlx1b5qdjgr83dk7cf";
        url = "https://github.com/inhabitedtype/faraday/archive/0.8.1.tar.gz";
      };
      version = "0.8.1";
    };
    fix = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0hi4rmdcm0g6jrywf1ngn52rr3s2f7qvzklmj4wbrabkfcca5lag";
        package = "packages/fix/fix.20201120";
      };
      pname = "fix";
      src = pkgs.fetchurl 
      {
        sha256 = "02xyn3wfcmz8if72y5pscy2imsnxv6s0fb0fvigjjdnknnd32wk9";
        url = "https://gitlab.inria.fr/fpottier/fix/-/archive/20201120/archive.tar.gz";
      };
      version = "20201120";
    };
    fmt = 
    {
      opamInputs = 
      {
        base-unix = selection.base-unix or null;
        cmdliner = selection.cmdliner or null;
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
        seq = selection.seq;
        stdlib-shims = selection.stdlib-shims;
        topkg = selection.topkg;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1lvq50p7a5i59jqkn4zijxm9p92c6phi20akdj3qbmlnjn8lqs7h";
        package = "packages/fmt/fmt.0.8.9";
      };
      pname = "fmt";
      src = pkgs.fetchurl 
      {
        sha256 = "0gkkkj4x678vxdda4xaw2dd44qjacavsvn5nx8gydfwah6pjbkxk";
        url = "https://erratique.ch/software/fmt/releases/fmt-0.8.9.tbz";
      };
      version = "0.8.9";
    };
    fpath = 
    {
      opamInputs = 
      {
        astring = selection.astring;
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
        topkg = selection.topkg;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1pnskgw9fqq4kg1x4sc4vcv9rh0kksilx4qngwafpyss42mqq2i2";
        package = "packages/fpath/fpath.0.7.3";
      };
      pname = "fpath";
      src = pkgs.fetchurl 
      {
        sha256 = "03z7mj0sqdz465rc4drj1gr88l9q3nfs374yssvdjdyhjbqqzc0j";
        url = "https://erratique.ch/software/fpath/releases/fpath-0.7.3.tbz";
      };
      version = "0.7.3";
    };
    gen_js_api = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
        ocaml-migrate-parsetree = selection.ocaml-migrate-parsetree;
        ojs = selection.ojs;
        ppxlib = selection.ppxlib;
      };
      opamSrc = "gen_js_api.opam";
      pname = "gen_js_api";
      src = self.directSrc "gen_js_api";
      version = "1.0.7";
    };
    graphql = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        graphql_parser = selection.graphql_parser;
        ocaml = selection.ocaml;
        rresult = selection.rresult;
        seq = selection.seq;
        yojson = selection.yojson;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:07i74v0gzaicqpw8r2g5yl3ssn4f2g00248gn97gwwjcv4pzn9qi";
        package = "packages/graphql/graphql.0.13.0";
      };
      pname = "graphql";
      src = pkgs.fetchurl 
      {
        sha256 = "0gb5y99ph0nz5y3pc1gxq1py4wji2hyf2ydbp0hv23v00n50hpsm";
        url = "https://github.com/andreas/ocaml-graphql-server/releases/download/0.13.0/graphql-0.13.0.tbz";
      };
      version = "0.13.0";
    };
    graphql-lwt = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        graphql = selection.graphql;
        lwt = selection.lwt;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0yfz8hp3211v8jwk9mqa7ajjig12vx2lsf20ip7aicvrfrj52wnz";
        package = "packages/graphql-lwt/graphql-lwt.0.13.0";
      };
      pname = "graphql-lwt";
      src = pkgs.fetchurl 
      {
        sha256 = "0gb5y99ph0nz5y3pc1gxq1py4wji2hyf2ydbp0hv23v00n50hpsm";
        url = "https://github.com/andreas/ocaml-graphql-server/releases/download/0.13.0/graphql-0.13.0.tbz";
      };
      version = "0.13.0";
    };
    graphql_parser = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        fmt = selection.fmt;
        menhir = selection.menhir;
        ocaml = selection.ocaml;
        re = selection.re;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0vd1dm3jdjp3aw4qi9hqq1rz1yhw589hnbyj3wrgmi0vicrk02py";
        package = "packages/graphql_parser/graphql_parser.0.13.0";
      };
      pname = "graphql_parser";
      src = pkgs.fetchurl 
      {
        sha256 = "0gb5y99ph0nz5y3pc1gxq1py4wji2hyf2ydbp0hv23v00n50hpsm";
        url = "https://github.com/andreas/ocaml-graphql-server/releases/download/0.13.0/graphql-0.13.0.tbz";
      };
      version = "0.13.0";
    };
    hmap = 
    {
      opamInputs = 
      {
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
        topkg = selection.topkg;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:19yc0fm5c0wzxyrwfy3bcb6yh3hbgwrhhh94ggzjs7di8vv9bkv1";
        package = "packages/hmap/hmap.0.8.1";
      };
      pname = "hmap";
      src = pkgs.fetchurl 
      {
        sha256 = "10xyjy4ab87z7jnghy0wnla9wrmazgyhdwhr4hdmxxdn28dxn03a";
        url = "http://erratique.ch/software/hmap/releases/hmap-0.8.1.tbz";
      };
      version = "0.8.1";
    };
    integers = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0bynxqx8waa5pbvkkz2glbmwsbfsnzvkd519z797774a0m9k4nh8";
        package = "packages/integers/integers.0.5.0";
      };
      pname = "integers";
      src = pkgs.fetchurl 
      {
        sha256 = "1wm1pxl5bk7r8g9qwc89cz5awdy6rpnyvnivhzc3ml32bmw6y4dh";
        url = "https://github.com/ocamllabs/ocaml-integers/archive/0.5.0.tar.gz";
      };
      version = "0.5.0";
    };
    ke = 
    {
      opamInputs = 
      {
        bigarray-compat = selection.bigarray-compat;
        dune = selection.dune;
        fmt = selection.fmt;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0wmc14izq43n705nd3qadzq2ydm5h1y9blf72dn2f2bxx5r6glmc";
        package = "packages/ke/ke.0.4";
      };
      pname = "ke";
      src = pkgs.fetchurl 
      {
        sha256 = "13c9xy60vmq29mnwpg3h3zgl6gjbjfwbx1s0crfc6xwvark0zxnx";
        url = "https://github.com/mirage/ke/releases/download/v0.4/ke-v0.4.tbz";
      };
      version = "0.4";
    };
    lambda-term = 
    {
      opamInputs = 
      {
        camomile = selection.camomile;
        dune = selection.dune;
        lwt = selection.lwt;
        lwt_log = selection.lwt_log;
        lwt_react = selection.lwt_react;
        mew_vi = selection.mew_vi;
        ocaml = selection.ocaml;
        react = selection.react;
        zed = selection.zed;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:01k27v0d6xlgsia58g4gcv4yan8z9vak63zvqdcv3fayb5d63pfd";
        package = "packages/lambda-term/lambda-term.3.1.0";
      };
      pname = "lambda-term";
      src = pkgs.fetchurl 
      {
        sha256 = "1462j2c2nnzv6ng8b6907bw0zy3mhhnnjdm8k6as0sgm9ls0r77r";
        url = "https://github.com/ocaml-community/lambda-term/archive/3.1.0.tar.gz";
      };
      version = "3.1.0";
    };
    lambdasoup = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        markup = selection.markup;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1hqfkvhr5n4lgzgg7wgpibkvad1pa87ca1rkslgwylfy9aj08x6l";
        package = "packages/lambdasoup/lambdasoup.0.7.2";
      };
      pname = "lambdasoup";
      src = pkgs.fetchurl 
      {
        sha256 = "1hj3dbnzm4vfzd0k7hgnlp2cxpbd9f5lbd2374bpfdzspxcl920h";
        url = "https://github.com/aantron/lambdasoup/archive/0.7.2.tar.gz";
      };
      version = "0.7.2";
    };
    logs = 
    {
      opamInputs = 
      {
        base-threads = selection.base-threads or null;
        cmdliner = selection.cmdliner or null;
        fmt = selection.fmt or null;
        js_of_ocaml = selection.js_of_ocaml or null;
        lwt = selection.lwt or null;
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
        topkg = selection.topkg;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1k797gb7f2s1hlqyqsq2xyq9gm20l5q2iwh26bs44f3bp3gklg1a";
        package = "packages/logs/logs.0.7.0";
      };
      pname = "logs";
      src = pkgs.fetchurl 
      {
        sha256 = "1jnmd675wmsmdwyb5mx5b0ac66g4c6gpv5s4mrx2j6pb0wla1x46";
        url = "https://erratique.ch/software/logs/releases/logs-0.7.0.tbz";
      };
      version = "0.7.0";
    };
    luv = 
    {
      opamInputs = 
      {
        base-unix = selection.base-unix;
        ctypes = selection.ctypes;
        dune = selection.dune;
        ocaml = selection.ocaml;
        result = selection.result;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:05isqqv6p9sxhdknbsv42jq5p76wsvk4biwa0sjc5rlc06jx6lw9";
        package = "packages/luv/luv.0.5.10";
      };
      pname = "luv";
      src = pkgs.fetchurl 
      {
        sha256 = "0zygir01d6vglfs4b3klnbg90glvyl9agq5xnzn8hmsb6d8z0jqp";
        url = "https://github.com/aantron/luv/releases/download/0.5.10/luv-0.5.10.tar.gz";
      };
      version = "0.5.10";
    };
    lwt = 
    {
      opamInputs = 
      {
        base-threads = selection.base-threads or null;
        base-unix = selection.base-unix or null;
        conf-libev = selection.conf-libev or null;
        cppo = selection.cppo;
        dune = selection.dune;
        dune-configurator = selection.dune-configurator;
        mmap = selection.mmap;
        ocaml = selection.ocaml;
        ocaml-syntax-shims = selection.ocaml-syntax-shims or null;
        ocplib-endian = selection.ocplib-endian;
        result = selection.result;
        seq = selection.seq;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1jss4a1pihrjdbcnfkva8i0p14ahx2ia6qwfjrqjkzir5fwp2n7j";
        package = "packages/lwt/lwt.5.4.2";
      };
      pname = "lwt";
      src = pkgs.fetchurl 
      {
        sha256 = "1jyjq43q9rbrw7ijy8l8rd1rhiy74ix2j1w15q0694rdfbkcnsg1";
        url = "https://github.com/ocsigen/lwt/archive/refs/tags/5.4.2.tar.gz";
      };
      version = "5.4.2";
    };
    lwt_log = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        lwt = selection.lwt;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:18iddwpvs7hwkmsbii11kiw0aaad4kf8iv9vjw01npflxh729vig";
        package = "packages/lwt_log/lwt_log.1.1.1";
      };
      pname = "lwt_log";
      src = pkgs.fetchurl 
      {
        sha256 = "0gszc8nvk2hpfq47plb36qahlnyfq28sa9mhicnf6mg5c7n1kyql";
        url = "https://github.com/aantron/lwt_log/archive/1.1.1.tar.gz";
      };
      version = "1.1.1";
    };
    lwt_ppx = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        lwt = selection.lwt;
        ocaml = selection.ocaml;
        ocaml-migrate-parsetree = selection.ocaml-migrate-parsetree;
        ppx_tools_versioned = selection.ppx_tools_versioned;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1vyj489ib60dh5ghvg0zgf5cp1h4720bnrizsiqdh9103sl2lirw";
        package = "packages/lwt_ppx/lwt_ppx.2.0.1";
      };
      pname = "lwt_ppx";
      src = pkgs.fetchurl 
      {
        sha256 = "0cmim5s7ay72pxpc66bmxmnj5lbg5yvm0ydrpnfh3nyhlcyjphcp";
        url = "https://github.com/ocsigen/lwt/archive/5.2.0.tar.gz";
      };
      version = "2.0.1";
    };
    lwt_react = 
    {
      buildInputs = [ (pkgs.unzip) ];
      opamInputs = 
      {
        dune = selection.dune;
        lwt = selection.lwt;
        ocaml = selection.ocaml;
        react = selection.react;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0i1pn2nahdcxjxy279lbzmbzccys3xgny015ibkza499njdyikkw";
        package = "packages/lwt_react/lwt_react.1.1.4";
      };
      pname = "lwt_react";
      src = pkgs.fetchurl 
      {
        sha256 = "1lv5i3znmiqx6fiq2q1lapsq1bk20bgw7h57wmk9czx9x050a5n5";
        url = "https://github.com/ocsigen/lwt/archive/5.4.0.zip";
      };
      version = "1.1.4";
    };
    lwt_ssl = 
    {
      opamInputs = 
      {
        base-unix = selection.base-unix;
        dune = selection.dune;
        lwt = selection.lwt;
        ocaml = selection.ocaml;
        ssl = selection.ssl;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1fri84nnlgq0zcmmr2hk19hj8a1d2wg98p41vyq27nj6wmg6h2r2";
        package = "packages/lwt_ssl/lwt_ssl.1.1.3";
      };
      pname = "lwt_ssl";
      src = pkgs.fetchurl 
      {
        sha256 = "0dxxkif4a667ndk14sn8ka4x4gck0gvw4sc12jb84rcq5k15jlkp";
        url = "https://github.com/ocsigen/lwt_ssl/archive/1.1.3.tar.gz";
      };
      version = "1.1.3";
    };
    magic-mime = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0cd3l2cjh2rlvp1r9l5fb0jxhn5176qjw042py9xq999zp09kp21";
        package = "packages/magic-mime/magic-mime.1.2.0";
      };
      pname = "magic-mime";
      src = pkgs.fetchurl 
      {
        sha256 = "1xcl0si6zgczfx1788y0qm5wir15fcfd1mczzki9gpgq01svc8gi";
        url = "https://github.com/mirage/ocaml-magic-mime/releases/download/v1.2.0/magic-mime-v1.2.0.tbz";
      };
      version = "1.2.0";
    };
    markup = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
        uchar = selection.uchar;
        uutf = selection.uutf;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:02nm8nr250mjnapf5j0d3gnqah0d9zmk4wm61hxg06l0yli881a3";
        package = "packages/markup/markup.1.0.2";
      };
      pname = "markup";
      src = pkgs.fetchurl 
      {
        sha256 = "1d6d95mj6m5jv4x9l4hv8qszy99f95qn7rcxndjf4pjmfv4sdix6";
        url = "https://github.com/aantron/markup.ml/archive/1.0.2.tar.gz";
      };
      version = "1.0.2";
    };
    menhir = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        menhirLib = selection.menhirLib;
        menhirSdk = selection.menhirSdk;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:13hy5mhzf47860lbm84nk9r48ivrjyd1hv9i56pvlqb6dcb94ffj";
        package = "packages/menhir/menhir.20210419";
      };
      pname = "menhir";
      src = pkgs.fetchurl 
      {
        sha256 = "1z471apfcfs9d1s85wg33z5prfnifzx07dprjxq4fgfpcbqpqh7q";
        url = "https://gitlab.inria.fr/fpottier/menhir/-/archive/20210419/archive.tar.gz";
      };
      version = "20210419";
    };
    menhirLib = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0393sm6qzdffhhkx4sqfmwr6xgl8dab7ap37mfwzyjrjycxbi1k5";
        package = "packages/menhirLib/menhirLib.20210419";
      };
      pname = "menhirLib";
      src = pkgs.fetchurl 
      {
        sha256 = "1z471apfcfs9d1s85wg33z5prfnifzx07dprjxq4fgfpcbqpqh7q";
        url = "https://gitlab.inria.fr/fpottier/menhir/-/archive/20210419/archive.tar.gz";
      };
      version = "20210419";
    };
    menhirSdk = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0ss2dh1dak5d5rqi6p6nvplrpi13y0s71fzka8l7djpj15qfcqdx";
        package = "packages/menhirSdk/menhirSdk.20210419";
      };
      pname = "menhirSdk";
      src = pkgs.fetchurl 
      {
        sha256 = "1z471apfcfs9d1s85wg33z5prfnifzx07dprjxq4fgfpcbqpqh7q";
        url = "https://gitlab.inria.fr/fpottier/menhir/-/archive/20210419/archive.tar.gz";
      };
      version = "20210419";
    };
    mew = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
        result = selection.result;
        trie = selection.trie;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0g9xms016f909fzbwgxcy0k4xmvr5zk5bhnz66v9vpsiak2qm4s3";
        package = "packages/mew/mew.0.1.0";
      };
      pname = "mew";
      src = pkgs.fetchurl 
      {
        sha256 = "1rjri9mgfb9gn9fmjn0ax21y9jd9wkvr7mmx2jrlqmzgabmqrlv4";
        url = "https://github.com/kandu/mew/archive/0.1.0.tar.gz";
      };
      version = "0.1.0";
    };
    mew_vi = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        mew = selection.mew;
        ocaml = selection.ocaml;
        react = selection.react;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0zsfhxpff78cqk2c81parajb59m7hqf6v8arksxbyfha6mls65hz";
        package = "packages/mew_vi/mew_vi.0.5.0";
      };
      pname = "mew_vi";
      src = pkgs.fetchurl 
      {
        sha256 = "1nmg3cysglgw4115n5zpz4azrfbnfxkn2kvw73chzs69viygm4m6";
        url = "https://github.com/kandu/mew_vi/archive/0.5.0.tar.gz";
      };
      version = "0.5.0";
    };
    mirage-crypto = 
    {
      opamInputs = 
      {
        bigarray-compat = selection.bigarray-compat;
        conf-pkg-config = selection.conf-pkg-config;
        cstruct = selection.cstruct;
        dune = selection.dune;
        dune-configurator = selection.dune-configurator;
        eqaf = selection.eqaf;
        ocaml = selection.ocaml;
        ocaml-freestanding = selection.ocaml-freestanding or null;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:065h09vig3r8vj2vvzvvdwarisxm6pakh8jwjq6n8cxczzwgai4n";
        package = "packages/mirage-crypto/mirage-crypto.0.10.3";
      };
      pname = "mirage-crypto";
      src = pkgs.fetchurl 
      {
        sha256 = "02whi8gb8wp7drczl7rfhg7mm0w1bcxdjh4a1qzjrc2rblv10yd2";
        url = "https://github.com/mirage/mirage-crypto/releases/download/v0.10.3/mirage-crypto-v0.10.3.tbz";
      };
      version = "0.10.3";
    };
    mirage-crypto-rng = 
    {
      opamInputs = 
      {
        cstruct = selection.cstruct;
        dune = selection.dune;
        dune-configurator = selection.dune-configurator;
        duration = selection.duration;
        logs = selection.logs;
        lwt = selection.lwt;
        mirage-crypto = selection.mirage-crypto;
        mtime = selection.mtime;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:064r6pmg7zzsalk1zzhsvxnsw360kgn4im47z8iv126mb6qjlcrk";
        package = "packages/mirage-crypto-rng/mirage-crypto-rng.0.10.3";
      };
      pname = "mirage-crypto-rng";
      src = pkgs.fetchurl 
      {
        sha256 = "02whi8gb8wp7drczl7rfhg7mm0w1bcxdjh4a1qzjrc2rblv10yd2";
        url = "https://github.com/mirage/mirage-crypto/releases/download/v0.10.3/mirage-crypto-v0.10.3.tbz";
      };
      version = "0.10.3";
    };
    mmap = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0mjn2jxrfwlrzppjnc6pg47ncm0ri6a1hn3kj2yz10rmpca25bsm";
        package = "packages/mmap/mmap.1.1.0";
      };
      pname = "mmap";
      src = pkgs.fetchurl 
      {
        sha256 = "0l6waidal2n8mkdn74avbslvc10sf49f5d889n838z03pra5chsc";
        url = "https://github.com/mirage/mmap/releases/download/v1.1.0/mmap-v1.1.0.tbz";
      };
      version = "1.1.0";
    };
    mtime = 
    {
      opamInputs = 
      {
        js_of_ocaml = selection.js_of_ocaml or null;
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
        topkg = selection.topkg;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1pvlkp6n3z75mjc5y0nvhf2s7fmzj8k84chwzvmyrpb786s9gqyh";
        package = "packages/mtime/mtime.1.2.0";
      };
      pname = "mtime";
      src = pkgs.fetchurl 
      {
        sha256 = "0zm1jvqkz3ghznfsm3bbv9q2zinp9grggdf7k9phjazjvny68xb8";
        url = "https://erratique.ch/software/mtime/releases/mtime-1.2.0.tbz";
      };
      version = "1.2.0";
    };
    multipart_form = 
    {
      opamInputs = 
      {
        angstrom = selection.angstrom;
        base64 = selection.base64;
        bigarray-compat = selection.bigarray-compat;
        bigstringaf = selection.bigstringaf;
        dune = selection.dune;
        fmt = selection.fmt;
        ke = selection.ke;
        logs = selection.logs;
        lwt = selection.lwt;
        ocaml = selection.ocaml;
        pecu = selection.pecu;
        prettym = selection.prettym;
        result = selection.result;
        rresult = selection.rresult;
        stdlib-shims = selection.stdlib-shims;
        unstrctrd = selection.unstrctrd;
        uutf = selection.uutf;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:18g06z6x6ark259y0vs502ijw7r7fm7hn9r61f3my8p8f844sg6z";
        package = "packages/multipart_form/multipart_form.0.3.0";
      };
      pname = "multipart_form";
      src = pkgs.fetchurl 
      {
        sha256 = "05cbs2fqvyg67nmyfi8cp8bzl3yzkzw1w2az8brdkxcw1cq9xkgl";
        url = "https://github.com/dinosaure/multipart_form/releases/download/v0.3.0/multipart_form-v0.3.0.tbz";
      };
      version = "0.3.0";
    };
    ocaml = 
    {
      opamInputs = 
      {
        ocaml-base-compiler = selection.ocaml-base-compiler or null;
        ocaml-config = selection.ocaml-config;
        ocaml-system = selection.ocaml-system or null;
        ocaml-variants = selection.ocaml-variants or null;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0xrq7j9zfynk524j69i3and0mqgi32wav751s4cqc1q7pqm47xpc";
        package = "packages/ocaml/ocaml.4.12.0";
      };
      pname = "ocaml";
      src = null;
      version = "4.12.0";
    };
    ocaml-base-compiler = 
    {
      opamInputs = {
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0gf3z9qmi976x4iwndfslcim50ickla52x9fp94aqxrgvsy1ypn7";
        package = "packages/ocaml-base-compiler/ocaml-base-compiler.4.12.0";
      };
      pname = "ocaml-base-compiler";
      src = pkgs.fetchurl 
      {
        sha256 = "0i37laikik5vwydw1cwygxd8xq2d6n35l20irgrh691njlwpmh5d";
        url = "https://github.com/ocaml/ocaml/archive/4.12.0.tar.gz";
      };
      version = "4.12.0";
    };
    ocaml-compiler-libs = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1jxaxfbb6cpyfcfmrr6602vni74adqagphhqlvcyaddm9cjbmwma";
        package = "packages/ocaml-compiler-libs/ocaml-compiler-libs.v0.12.3";
      };
      pname = "ocaml-compiler-libs";
      src = pkgs.fetchurl 
      {
        sha256 = "1jg32fjr7n4933r01iqgablshagx20vgjkjh5pdbn54w8cqkah58";
        url = "https://github.com/janestreet/ocaml-compiler-libs/releases/download/v0.12.3/ocaml-compiler-libs-v0.12.3.tbz";
      };
      version = "v0.12.3";
    };
    ocaml-config = 
    {
      opamInputs = 
      {
        ocaml-base-compiler = selection.ocaml-base-compiler or null;
        ocaml-system = selection.ocaml-system or null;
        ocaml-variants = selection.ocaml-variants or null;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0h0hgqq9mbywvqygppfdc50gf9ss8a97l4dgsv3hszmzh6gglgrg";
        package = "packages/ocaml-config/ocaml-config.2";
      };
      pname = "ocaml-config";
      src = null;
      version = "2";
    };
    ocaml-migrate-parsetree = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
        ppx_derivers = selection.ppx_derivers;
        result = selection.result;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1kn4x3i5q2sbki2xy4jl81bx3w8kxpksjrpw4x6hlydglbv0bb0z";
        package = "packages/ocaml-migrate-parsetree/ocaml-migrate-parsetree.1.8.0";
      };
      pname = "ocaml-migrate-parsetree";
      src = pkgs.fetchurl 
      {
        sha256 = "1dcgifw2npgkjrnb1b6jvx36wydy0nk6ny3m4wgh8i0lzxvd3hmi";
        url = "https://github.com/ocaml-ppx/ocaml-migrate-parsetree/releases/download/v1.8.0/ocaml-migrate-parsetree-v1.8.0.tbz";
      };
      version = "1.8.0";
    };
    ocaml-syntax-shims = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0qnm1db0298yqcn6j9fmb0l4gr5nhcar8plskj39917invyamgd2";
        package = "packages/ocaml-syntax-shims/ocaml-syntax-shims.1.0.0";
      };
      pname = "ocaml-syntax-shims";
      src = pkgs.fetchurl 
      {
        sha256 = "1j7848khli4p7j8i2kmnvhdnhcwhy3zgdpf5ds5ic30ax69y3cl9";
        url = "https://github.com/ocaml-ppx/ocaml-syntax-shims/releases/download/1.0.0/ocaml-syntax-shims-1.0.0.tbz";
      };
      version = "1.0.0";
    };
    ocaml_nix = 
    {
      opamInputs = 
      {
        dream = selection.dream;
        dream-cli = selection.dream-cli;
        dream-encoding = selection.dream-encoding;
        dream-livereload = selection.dream-livereload;
        dream-serve = selection.dream-serve;
        ocamlformat = selection.ocamlformat;
        utop = selection.utop;
      };
      opamSrc = "ocaml_nix.opam";
      pname = "ocaml_nix";
      src = self.directSrc "ocaml_nix";
      version = "development";
    };
    ocamlbuild = 
    {
      opamInputs = {
                     ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0hrzb4fgz7qh7cr65j5yq6fai82fhyl6bp8s9pwcj1a2yhczbviv";
        package = "packages/ocamlbuild/ocamlbuild.0.14.0";
      };
      pname = "ocamlbuild";
      src = pkgs.fetchurl 
      {
        sha256 = "0y1fskw9rg2y1zgb7whv3v8v4xw04svgxslf3856q2aqd7lrrcl7";
        url = "https://github.com/ocaml/ocamlbuild/archive/0.14.0.tar.gz";
      };
      version = "0.14.0";
    };
    ocamlfind = 
    {
      opamInputs = 
      {
        graphics = selection.graphics or null;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:11avrzm0gdc6mz7dazr8q18ir5429ckc36s2mv0l8722znq8lc3k";
        package = "packages/ocamlfind/ocamlfind.1.9.1";
      };
      pname = "ocamlfind";
      src = pkgs.fetchurl 
      {
        sha256 = "1qhgk25avmz4l4g47g8jvk0k1g9p9d5hbdrwpz2693a8ajyvhhib";
        url = "http://download.camlcity.org/download/findlib-1.9.1.tar.gz";
      };
      version = "1.9.1";
    };
    ocamlformat = 
    {
      opamInputs = 
      {
        base = selection.base;
        base-unix = selection.base-unix;
        cmdliner = selection.cmdliner;
        dune = selection.dune;
        dune-build-info = selection.dune-build-info;
        fix = selection.fix;
        fpath = selection.fpath;
        menhir = selection.menhir;
        menhirLib = selection.menhirLib;
        menhirSdk = selection.menhirSdk;
        ocaml = selection.ocaml;
        ocp-indent = selection.ocp-indent;
        odoc-parser = selection.odoc-parser;
        re = selection.re;
        stdio = selection.stdio;
        uuseg = selection.uuseg;
        uutf = selection.uutf;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1760lhlwf3xapqwg68lvsks6c164qzh41z5zj1ddpgvrlszjii0l";
        package = "packages/ocamlformat/ocamlformat.0.19.0";
      };
      pname = "ocamlformat";
      src = pkgs.fetchurl 
      {
        sha256 = "0ihgwl7d489g938m1jvgx8azdgq9f5np5mzqwwya797hx2m4dz32";
        url = "https://github.com/ocaml-ppx/ocamlformat/releases/download/0.19.0/ocamlformat-0.19.0.tbz";
      };
      version = "0.19.0";
    };
    ocp-indent = 
    {
      opamInputs = 
      {
        base-bytes = selection.base-bytes;
        cmdliner = selection.cmdliner;
        dune = selection.dune;
        ocaml = selection.ocaml;
        ocamlfind = selection.ocamlfind;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:052h7m04agla2gvvv7ry2akdfd8khlkp01xr4qhv6w9lkwwdbfs5";
        package = "packages/ocp-indent/ocp-indent.1.8.1";
      };
      pname = "ocp-indent";
      src = pkgs.fetchurl 
      {
        sha256 = "0rqcvwzpwwzwqvrzg1l37jjiglrk2ijgjg1c7vy3xvc8lk9zyysw";
        url = "https://github.com/OCamlPro/ocp-indent/archive/1.8.1.tar.gz";
      };
      version = "1.8.1";
    };
    ocplib-endian = 
    {
      opamInputs = 
      {
        base-bytes = selection.base-bytes;
        cppo = selection.cppo;
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0j5ymxa4ky208k8m4bprvmvbqf9jnr4d0xwdaivznbv85jq9hw4q";
        package = "packages/ocplib-endian/ocplib-endian.1.1";
      };
      pname = "ocplib-endian";
      src = pkgs.fetchurl 
      {
        sha256 = "0qy5q7p11gxi5anhvi8jj6mr80ml0ih8lax5k579rsr2hsp3sns5";
        url = "https://github.com/OCamlPro/ocplib-endian/archive/1.1.tar.gz";
      };
      version = "1.1";
    };
    odoc-parser = 
    {
      opamInputs = 
      {
        astring = selection.astring;
        dune = selection.dune;
        ocaml = selection.ocaml;
        result = selection.result;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1z2y8dqdyfwd1l0aam87c9xdgmyc1bj2fjxr7mfnwp8ipzx5jf2d";
        package = "packages/odoc-parser/odoc-parser.0.9.0";
      };
      pname = "odoc-parser";
      src = pkgs.fetchurl 
      {
        sha256 = "0ydxy2sj2w9i4vvyjnxplgmp5gbkp5ilnv36pvk4vgrrmldss3fz";
        url = "https://github.com/ocaml-doc/odoc-parser/releases/download/0.9.0/odoc-parser-0.9.0.tbz";
      };
      version = "0.9.0";
    };
    ojs = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = "ojs.opam";
      pname = "ojs";
      src = self.directSrc "ojs";
      version = "1.0.7";
    };
    optint = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:09szayqyi6x8zqm609ccr5nn0ksyl5la7fqzgn4fsvq9vfd1sv1n";
        package = "packages/optint/optint.0.1.0";
      };
      pname = "optint";
      src = pkgs.fetchurl 
      {
        sha256 = "0p8q04xps07qg2am58ih8c8h5f50i5arvkcgmxzcq5iw49h7d117";
        url = "https://github.com/mirage/optint/releases/download/v0.1.0/optint-v0.1.0.tbz";
      };
      version = "0.1.0";
    };
    pecu = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1h3k00rxhhs31q2inxrypjj8dk3qhnn0bz6xlj3p5hs92frww3s3";
        package = "packages/pecu/pecu.0.6";
      };
      pname = "pecu";
      src = pkgs.fetchurl 
      {
        sha256 = "1iz5jj9lyl1pah8dfni4wv0qml0ir5zknv4zhw7v50sc8kdbglm9";
        url = "https://github.com/mirage/pecu/releases/download/v0.6/pecu-v0.6.tbz";
      };
      version = "0.6";
    };
    ppx_derivers = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0r8rjp4m5jfbf3wz8qlgh82pxjws4arjwxhqq0zjglby6l6h8p3x";
        package = "packages/ppx_derivers/ppx_derivers.1.2.1";
      };
      pname = "ppx_derivers";
      src = pkgs.fetchurl 
      {
        sha256 = "159vqy616ni18mn0dlv8c2y4h7mb4hahwjn53yrr59yyhzhmwndn";
        url = "https://github.com/ocaml-ppx/ppx_derivers/archive/1.2.1.tar.gz";
      };
      version = "1.2.1";
    };
    ppx_tools_versioned = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
        ocaml-migrate-parsetree = selection.ocaml-migrate-parsetree;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:03bvkrs00mb0c36qcqlzfz4ikm7lmxi0fz913l3wazynisk22rs7";
        package = "packages/ppx_tools_versioned/ppx_tools_versioned.5.4.0";
      };
      pname = "ppx_tools_versioned";
      src = pkgs.fetchurl 
      {
        sha256 = "0sw2676vgbsj133lgs3sl8494fhfldafzvgw4j4dnb1wqwha6pxy";
        url = "https://github.com/ocaml-ppx/ppx_tools_versioned/archive/5.4.0.tar.gz";
      };
      version = "5.4.0";
    };
    ppxlib = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
        ocaml-compiler-libs = selection.ocaml-compiler-libs;
        ocaml-migrate-parsetree = selection.ocaml-migrate-parsetree;
        ppx_derivers = selection.ppx_derivers;
        sexplib0 = selection.sexplib0;
        stdlib-shims = selection.stdlib-shims;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0kc4q7gq0ln6dq1c0r3as5my4rlz8khzlgwg2dqr69j4dxqv4gjd";
        package = "packages/ppxlib/ppxlib.0.15.0";
      };
      pname = "ppxlib";
      src = pkgs.fetchurl 
      {
        sha256 = "0c5kjgyxhck5wlnhrsh77ylkbrq3rssqhwf2bjjrka3limzhsqqb";
        url = "https://github.com/ocaml-ppx/ppxlib/releases/download/0.15.0/ppxlib-0.15.0.tbz";
      };
      version = "0.15.0";
    };
    prettym = 
    {
      opamInputs = 
      {
        bigarray-compat = selection.bigarray-compat;
        bigarray-overlap = selection.bigarray-overlap;
        bigstringaf = selection.bigstringaf;
        dune = selection.dune;
        fmt = selection.fmt;
        ke = selection.ke;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1r4w04n5x7a20s78izkf765d2mfz72aa9zfbfwpc91fyn7rb2j8c";
        package = "packages/prettym/prettym.0.0.1";
      };
      pname = "prettym";
      src = pkgs.fetchurl 
      {
        sha256 = "1d4mds7z5b81m8ipngnz79il3csnyjmxbs2iyshz0z8q435xw829";
        url = "https://github.com/dinosaure/prettym/releases/download/0.0.1/prettym-0.0.1.tbz";
      };
      version = "0.0.1";
    };
    psq = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
        seq = selection.seq;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0bbyscl3az6vi6rncif7f8da7br78870qql5vlmg56w7ka3sgj9s";
        package = "packages/psq/psq.0.2.0";
      };
      pname = "psq";
      src = pkgs.fetchurl 
      {
        sha256 = "1j4lqkq17rskhgcrpgr4n1m1a2b1x35mlxj6f9g05rhpmgvgvknk";
        url = "https://github.com/pqwy/psq/releases/download/v0.2.0/psq-v0.2.0.tbz";
      };
      version = "0.2.0";
    };
    ptime = 
    {
      opamInputs = 
      {
        js_of_ocaml = selection.js_of_ocaml or null;
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
        result = selection.result;
        topkg = selection.topkg;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0ldzn2jmz8c3n9rr4mqyfa92lkb3378cmik3klznbln7lsf4fa1v";
        package = "packages/ptime/ptime.0.8.5";
      };
      pname = "ptime";
      src = pkgs.fetchurl 
      {
        sha256 = "1fxq57xy1ajzfdnvv5zfm7ap2nf49znw5f9gbi4kb9vds942ij27";
        url = "https://erratique.ch/software/ptime/releases/ptime-0.8.5.tbz";
      };
      version = "0.8.5";
    };
    re = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
        seq = selection.seq;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1iylcsjy7225ilcy8d0f5wz5lm0sx0xz0cnq2l8pfbyll9vxvawy";
        package = "packages/re/re.1.9.0";
      };
      pname = "re";
      src = pkgs.fetchurl 
      {
        sha256 = "1gas4ky49zgxph3870nffzkr6y41kkpqp4nj38pz1gh49zcf12aj";
        url = "https://github.com/ocaml/ocaml-re/releases/download/1.9.0/re-1.9.0.tbz";
      };
      version = "1.9.0";
    };
    react = 
    {
      opamInputs = 
      {
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
        topkg = selection.topkg;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0wk5i83r2hxz1r1skkhzz8rild68m4g9i9blxigbg9r60hgw18z5";
        package = "packages/react/react.1.2.1";
      };
      pname = "react";
      src = pkgs.fetchurl 
      {
        sha256 = "1aj8w79gdd9xnrbz7s5p8glcb4pmimi8jp9f439dqnf6ih3mqb3v";
        url = "http://erratique.ch/software/react/releases/react-1.2.1.tbz";
      };
      version = "1.2.1";
    };
    result = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0ybmvlisfz5swvbcq855czz1ysv9zxmb79f1m0x8284hczmfm98f";
        package = "packages/result/result.1.5";
      };
      pname = "result";
      src = pkgs.fetchurl 
      {
        sha256 = "0cpfp35fdwnv3p30a06wd0py3805qxmq3jmcynjc3x2qhlimwfkw";
        url = "https://github.com/janestreet/result/releases/download/1.5/result-1.5.tbz";
      };
      version = "1.5";
    };
    rresult = 
    {
      opamInputs = 
      {
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
        result = selection.result;
        topkg = selection.topkg;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:10vaq82rzip2rn1rbq27pjckvqassjh1n58pnsypldqaahxnbca6";
        package = "packages/rresult/rresult.0.6.0";
      };
      pname = "rresult";
      src = pkgs.fetchurl 
      {
        sha256 = "1k69a3gvrk7f2cshwjzvk7818f0bwxhacgd14wxy6d4gmrggci86";
        url = "http://erratique.ch/software/rresult/releases/rresult-0.6.0.tbz";
      };
      version = "0.6.0";
    };
    seq = 
    {
      opamInputs = {
                     ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1vm8mk6zm2q3fwnkprl6jib048zr4ysldw0bl74x6wwbxj0vx6k9";
        package = "packages/seq/seq.base";
      };
      pname = "seq";
      src = null;
      version = "base";
    };
    sexplib0 = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0k9vkjbiibja48c0yayal7xwyik3h3c3v4dwd3j7jbmras63ig2c";
        package = "packages/sexplib0/sexplib0.v0.14.0";
      };
      pname = "sexplib0";
      src = pkgs.fetchurl 
      {
        sha256 = "0adrc0r1vvvr41dcpj8jwkzh1dfgqf0mks9xlnnskqfm3a51iavg";
        url = "https://ocaml.janestreet.com/ocaml-core/v0.14/files/sexplib0-v0.14.0.tar.gz";
      };
      version = "v0.14.0";
    };
    ssl = 
    {
      opamInputs = 
      {
        base-unix = selection.base-unix;
        conf-libssl = selection.conf-libssl;
        dune = selection.dune;
        dune-configurator = selection.dune-configurator;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1vyxxwa7p5dz94d52gra6kljcnn76c9vy6a5x79npynpa3mv6fd4";
        package = "packages/ssl/ssl.0.5.10";
      };
      pname = "ssl";
      src = pkgs.fetchurl 
      {
        sha256 = "0vcc8p6i8lhs59y3ycikllc6j1adh9syh63g5ibnrp3yz3lk2cwl";
        url = "https://github.com/savonet/ocaml-ssl/archive/v0.5.10.tar.gz";
      };
      version = "0.5.10";
    };
    stdio = 
    {
      opamInputs = 
      {
        base = selection.base;
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:19hlf6bgx1avq4ifwji2rj2f2j26v3nf8ywjnwh2m3dpvfqc4pvk";
        package = "packages/stdio/stdio.v0.14.0";
      };
      pname = "stdio";
      src = pkgs.fetchurl 
      {
        sha256 = "1hj5hraprqy2i90a690l11yjszvb99j818q3d684ryx6p2lddk0l";
        url = "https://ocaml.janestreet.com/ocaml-core/v0.14/files/stdio-v0.14.0.tar.gz";
      };
      version = "v0.14.0";
    };
    stdlib-shims = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:19g9dnaxyh2ajz6pdczdsqzzvsmfrxwx6f613inkr31jw5hrqkiz";
        package = "packages/stdlib-shims/stdlib-shims.0.3.0";
      };
      pname = "stdlib-shims";
      src = pkgs.fetchurl 
      {
        sha256 = "0jnqsv6pqp5b5g7lcjwgd75zqqvcwcl5a32zi03zg1kvj79p5gxs";
        url = "https://github.com/ocaml/stdlib-shims/releases/download/0.3.0/stdlib-shims-0.3.0.tbz";
      };
      version = "0.3.0";
    };
    stringext = 
    {
      opamInputs = 
      {
        base-bytes = selection.base-bytes;
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1yjysjb40yjhqmcx3z12y2nmr2qy215qdnvdns1hxip0fjcd4zkz";
        package = "packages/stringext/stringext.1.6.0";
      };
      pname = "stringext";
      src = pkgs.fetchurl 
      {
        sha256 = "1sh6nafi3i9773j5mlwwz3kxfzdjzsfqj2qibxhigawy5vazahfv";
        url = "https://github.com/rgrinberg/stringext/releases/download/1.6.0/stringext-1.6.0.tbz";
      };
      version = "1.6.0";
    };
    topkg = 
    {
      opamInputs = 
      {
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1asjip3cr84b1n1n4q8b5zrcki87niz6imb9m9zaj2kqdywmp0m5";
        package = "packages/topkg/topkg.1.0.3";
      };
      pname = "topkg";
      src = pkgs.fetchurl 
      {
        sha256 = "0b77gsz9bqby8v77kfi4lans47x9p2lmzanzwins5r29maphb8y6";
        url = "http://erratique.ch/software/topkg/releases/topkg-1.0.3.tbz";
      };
      version = "1.0.3";
    };
    trie = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:19fpyjxqyniqjnpbqxbdb9i8khn33aqmn144h30apbdq8pxb950i";
        package = "packages/trie/trie.1.0.0";
      };
      pname = "trie";
      src = pkgs.fetchurl 
      {
        sha256 = "1slq4kiwnc723dsaw15ms7xxpqz061v8zck1m6iyc5j2li70by62";
        url = "https://github.com/kandu/trie/archive/1.0.0.tar.gz";
      };
      version = "1.0.0";
    };
    uchar = 
    {
      opamInputs = 
      {
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:17sfpyj5a1z3knnjvnfa5vql6cj2x9pzgzk8w4jrvd2zii2bwpcl";
        package = "packages/uchar/uchar.0.0.2";
      };
      pname = "uchar";
      src = pkgs.fetchurl 
      {
        sha256 = "1w2saw7zanf9m9ffvz2lvcxvlm118pws2x1wym526xmydhqpyfa7";
        url = "https://github.com/ocaml/uchar/releases/download/v0.0.2/uchar-0.0.2.tbz";
      };
      version = "0.0.2";
    };
    unstrctrd = 
    {
      opamInputs = 
      {
        angstrom = selection.angstrom;
        dune = selection.dune;
        ocaml = selection.ocaml;
        uutf = selection.uutf;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1iymq71d8av17jrzny7xmr7kih3ll0pxd14rippxymxmlhs6xhiy";
        package = "packages/unstrctrd/unstrctrd.0.2";
      };
      pname = "unstrctrd";
      src = pkgs.fetchurl 
      {
        sha256 = "0yb9n7zrdvcsawwjj9dxfwqc9gq12bmaynnfyjm5yd0s876vyh0h";
        url = "https://github.com/dinosaure/unstrctrd/releases/download/v0.2/unstrctrd-v0.2.tbz";
      };
      version = "0.2";
    };
    uri = 
    {
      opamInputs = 
      {
        angstrom = selection.angstrom;
        dune = selection.dune;
        ocaml = selection.ocaml;
        stringext = selection.stringext;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1s0rbjixhl1ypxv9xxmldlmxm6gj9rrzmcgydp8dna4n0wza4hbf";
        package = "packages/uri/uri.4.2.0";
      };
      pname = "uri";
      src = pkgs.fetchurl 
      {
        sha256 = "0szifda6yism5vn5jdizkha3ad0xk6zw4xgfl8g77dnv83ci7h65";
        url = "https://github.com/mirage/ocaml-uri/releases/download/v4.2.0/uri-v4.2.0.tbz";
      };
      version = "4.2.0";
    };
    utop = 
    {
      opamInputs = 
      {
        base-threads = selection.base-threads;
        base-unix = selection.base-unix;
        camomile = selection.camomile;
        cppo = selection.cppo;
        dune = selection.dune;
        lambda-term = selection.lambda-term;
        lwt = selection.lwt;
        lwt_react = selection.lwt_react;
        ocaml = selection.ocaml;
        ocamlfind = selection.ocamlfind;
        react = selection.react;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:06vqirjvqjqx9h33nd7c25x51zfl28icjkvhqdsgw8rggssmpx9k";
        package = "packages/utop/utop.2.8.0";
      };
      pname = "utop";
      src = pkgs.fetchurl 
      {
        sha256 = "0mi571ifjzq4wcjarn8q1b7yl8nxjm1jfx3afac224lqwn6bhb2d";
        url = "https://github.com/ocaml-community/utop/releases/download/2.8.0/utop-2.8.0.tbz";
      };
      version = "2.8.0";
    };
    uucp = 
    {
      opamInputs = 
      {
        cmdliner = selection.cmdliner or null;
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
        topkg = selection.topkg;
        uunf = selection.uunf or null;
        uutf = selection.uutf or null;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0chi9ydylzc4ra8xhxn9ay5p1cish0mmzna6ppd8pa51pld3qjkx";
        package = "packages/uucp/uucp.13.0.0";
      };
      pname = "uucp";
      src = pkgs.fetchurl 
      {
        sha256 = "19kf8ypxaakacgg1dwwfzkc2zicaj88cmw11fw2z7zl24dn4gyiq";
        url = "https://erratique.ch/software/uucp/releases/uucp-13.0.0.tbz";
      };
      version = "13.0.0";
    };
    uuseg = 
    {
      opamInputs = 
      {
        cmdliner = selection.cmdliner or null;
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
        topkg = selection.topkg;
        uucp = selection.uucp;
        uutf = selection.uutf or null;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:12s9hqb0k949gj9qj4jbham7r6lra9jmdvy6zjws9wa7dr7rjhmk";
        package = "packages/uuseg/uuseg.13.0.0";
      };
      pname = "uuseg";
      src = pkgs.fetchurl 
      {
        sha256 = "1a635j8ra6p27g1ivfln3387lhwqmf6vq4r6bn7b6n1qsqyi1rls";
        url = "https://erratique.ch/software/uuseg/releases/uuseg-13.0.0.tbz";
      };
      version = "13.0.0";
    };
    uutf = 
    {
      opamInputs = 
      {
        cmdliner = selection.cmdliner or null;
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
        topkg = selection.topkg;
        uchar = selection.uchar;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1j4hkk196lg1dsnf6jb1n8y3na606lkfb5vlr0gjb53qc7pdh6cy";
        package = "packages/uutf/uutf.1.0.2";
      };
      pname = "uutf";
      src = pkgs.fetchurl 
      {
        sha256 = "1nx1rly3qj23jzn9yk3x6fwqimcxjd84kv5859vvhdg56psq26p6";
        url = "http://erratique.ch/software/uutf/releases/uutf-1.0.2.tbz";
      };
      version = "1.0.2";
    };
    yojson = 
    {
      opamInputs = 
      {
        biniou = selection.biniou;
        cppo = selection.cppo;
        dune = selection.dune;
        easy-format = selection.easy-format;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1n8iih0jmaf9b0hsv6ph729jajws9w43kgm24324p4wlj45rjs2q";
        package = "packages/yojson/yojson.1.7.0";
      };
      pname = "yojson";
      src = pkgs.fetchurl 
      {
        sha256 = "1iich6323npvvs8r50lkr4pxxqm9mf6w67cnid7jg1j1g5gwcvv5";
        url = "https://github.com/ocaml-community/yojson/releases/download/1.7.0/yojson-1.7.0.tbz";
      };
      version = "1.7.0";
    };
    zed = 
    {
      opamInputs = 
      {
        base-bytes = selection.base-bytes;
        camomile = selection.camomile;
        charInfo_width = selection.charInfo_width;
        dune = selection.dune;
        ocaml = selection.ocaml;
        react = selection.react;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:163xyha7x4q4fd1aai8cll72py1jkp9bl1qpz9smqn3dbzfrkrk0";
        package = "packages/zed/zed.3.1.0";
      };
      pname = "zed";
      src = pkgs.fetchurl 
      {
        sha256 = "1z95fs49hi00xy078a83m0vfdqwjb5953rwr15lfpirldi4v11y3";
        url = "https://github.com/ocaml-community/zed/archive/3.1.0.tar.gz";
      };
      version = "3.1.0";
    };
  };
}

